import 'package:flutter/material.dart';
import 'package:idev_v1/src/grid/trina_grid/trina_grid.dart';
import 'package:idev_v1/src/theme/themes.dart';

final Map<Color, Map<String, dynamic>> themeGridStyles = {
  // white 테마 (밝은 배경, 어두운 텍스트)
  Colors.white: {
    'gridBackgroundColor': Colors.white,
    'borderColor': Colors.grey[300]!,
    'rowColor': Colors.white,
    'oddRowColor': Colors.white,
    'evenRowColor': Colors.grey[50]!,
    'activatedColor': Colors.grey[200]!,
    'activatedBorderColor': Colors.grey[500]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.grey[100]!,
    'cellColorInEditState': Colors.grey[200]!,
    'cellColorInReadOnlyState': Colors.white,
    'dragTargetColumnColor': Colors.grey[200]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.grey[300]!,
    'inactivatedBorderColor': Colors.grey[300]!,
  },
  // dark 테마 (어두운 배경, 흰색 텍스트; 셀 배경은 진한 회색 계열)
  Colors.black: {
    'gridBackgroundColor': Colors.grey[900]!,
    'borderColor': Colors.grey[800]!,
    'rowColor': Colors.grey[900]!,
    'oddRowColor': Colors.grey[900]!,
    'evenRowColor': Colors.grey[850]!,
    'activatedColor': Colors.grey[700]!,
    'activatedBorderColor': Colors.white,
    'cellTextStyle': const TextStyle(color: Colors.white),
    'columnTextStyle': const TextStyle(color: Colors.white),
    'groupHeaderStyle': const TextStyle(color: Colors.white),
    'rowCheckedColor': Colors.black.withOpacity(0.07),
    'rowHoveredColor': Colors.grey[800]!,
    'cellColorInEditState': Colors.grey[800]!,
    'cellColorInReadOnlyState': Colors.grey[800]!,
    'dragTargetColumnColor': Colors.grey[700]!,
    'iconColor': Colors.white38,
    'disabledIconColor': Colors.white12,
    'menuBackgroundColor': Colors.grey[850]!,
    'gridBorderColor': Colors.grey[800]!,
    'inactivatedBorderColor': Colors.grey[800]!,
  },
  // light 테마 (Colors.yellow)
  Colors.yellow: {
    'gridBackgroundColor': Colors.yellow[50]!,
    'borderColor': Colors.grey[400]!,
    'rowColor': Colors.yellow[100]!,
    'oddRowColor': Colors.yellow[100]!,
    'evenRowColor': Colors.yellow[50]!,
    'activatedColor': Colors.yellow[300]!,
    'activatedBorderColor': Colors.yellow[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.yellow[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.white,
    'dragTargetColumnColor': Colors.yellow[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.grey[400]!,
    'inactivatedBorderColor': Colors.grey[400]!,
  },
  // spring 테마 (pink 계열)
  Colors.pink: {
    'gridBackgroundColor': Colors.pink[50]!,
    'borderColor': Colors.pink[200]!,
    'rowColor': Colors.pink[100]!,
    'oddRowColor': Colors.pink[100]!,
    'evenRowColor': Colors.pink[50]!,
    'activatedColor': Colors.pink[300]!,
    'activatedBorderColor': Colors.pink[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.pink[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.pink[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.pink[200]!,
    'inactivatedBorderColor': Colors.pink[200]!,
  },
  // summer 테마 (blue/lightBlue 계열)
  Colors.blue: {
    'gridBackgroundColor': Colors.lightBlue[50]!,
    'borderColor': Colors.blue[200]!,
    'rowColor': Colors.lightBlue[100]!,
    'oddRowColor': Colors.lightBlue[100]!,
    'evenRowColor': Colors.lightBlue[50]!,
    'activatedColor': Colors.blue[300]!,
    'activatedBorderColor': Colors.blue[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.blue[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.blue[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.blue[200]!,
    'inactivatedBorderColor': Colors.blue[200]!,
  },
  // autumn 테마 (orange 계열)
  Colors.orange: {
    'gridBackgroundColor': Colors.orange[50]!,
    'borderColor': Colors.orange[200]!,
    'rowColor': Colors.orange[100]!,
    'oddRowColor': Colors.orange[100]!,
    'evenRowColor': Colors.orange[50]!,
    'activatedColor': Colors.orange[300]!,
    'activatedBorderColor': Colors.orange[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.orange[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.orange[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.orange[200]!,
    'inactivatedBorderColor': Colors.orange[200]!,
  },
  // winter 테마 (blueGrey 계열)
  Colors.blueGrey: {
    'gridBackgroundColor': Colors.blueGrey[50]!,
    'borderColor': Colors.blueGrey[200]!,
    'rowColor': Colors.blueGrey[100]!,
    'oddRowColor': Colors.blueGrey[100]!,
    'evenRowColor': Colors.blueGrey[50]!,
    'activatedColor': Colors.blueGrey[300]!,
    'activatedBorderColor': Colors.blueGrey[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.blueGrey[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.blueGrey[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.blueGrey[200]!,
    'inactivatedBorderColor': Colors.blueGrey[200]!,
  },
  // nature 테마 (green 계열)
  Colors.green: {
    'gridBackgroundColor': Colors.green[50]!,
    'borderColor': Colors.green[200]!,
    'rowColor': Colors.green[100]!,
    'oddRowColor': Colors.green[100]!,
    'evenRowColor': Colors.green[50]!,
    'activatedColor': Colors.green[300]!,
    'activatedBorderColor': Colors.green[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.green[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.green[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.green[200]!,
    'inactivatedBorderColor': Colors.green[200]!,
  },
  // sea 테마 (teal 계열)
  Colors.teal: {
    'gridBackgroundColor': Colors.teal[50]!,
    'borderColor': Colors.teal[200]!,
    'rowColor': Colors.teal[100]!,
    'oddRowColor': Colors.teal[100]!,
    'evenRowColor': Colors.teal[50]!,
    'activatedColor': Colors.teal[300]!,
    'activatedBorderColor': Colors.teal[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.teal[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.teal[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.teal[200]!,
    'inactivatedBorderColor': Colors.teal[200]!,
  },
  // tree 테마 (brown 계열)
  Colors.brown: {
    'gridBackgroundColor': Colors.brown[50]!,
    'borderColor': Colors.brown[200]!,
    'rowColor': Colors.brown[100]!,
    'oddRowColor': Colors.brown[100]!,
    'evenRowColor': Colors.brown[50]!,
    'activatedColor': Colors.brown[300]!,
    'activatedBorderColor': Colors.brown[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.brown[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.brown[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.brown[200]!,
    'inactivatedBorderColor': Colors.brown[200]!,
  },
  // universe 테마 (deepPurple 계열)
  Colors.deepPurple: {
    'gridBackgroundColor': Colors.deepPurple[50]!,
    'borderColor': Colors.deepPurple[200]!,
    'rowColor': Colors.deepPurple[100]!,
    'oddRowColor': Colors.deepPurple[100]!,
    'evenRowColor': Colors.deepPurple[50]!,
    'activatedColor': Colors.deepPurple[300]!,
    'activatedBorderColor': Colors.deepPurple[700]!,
    'cellTextStyle': const TextStyle(color: Colors.black),
    'columnTextStyle': const TextStyle(color: Colors.black),
    'groupHeaderStyle': const TextStyle(color: Colors.black),
    'rowCheckedColor': const Color(0x11CCCCCC),
    'rowHoveredColor': Colors.deepPurple[200]!,
    'cellColorInEditState': Colors.grey[300]!,
    'cellColorInReadOnlyState': Colors.grey[100]!,
    'dragTargetColumnColor': Colors.deepPurple[300]!,
    'iconColor': Colors.black38,
    'disabledIconColor': Colors.black12,
    'menuBackgroundColor': Colors.grey[200]!,
    'gridBorderColor': Colors.deepPurple[200]!,
    'inactivatedBorderColor': Colors.deepPurple[200]!,
  },
};

Color gridThemeColor(String theme) {
  return themes[theme]!;
}

TrinaGridStyleConfig gridStyle(String theme) {
  final Color color = themes[theme]!;
  return TrinaGridStyleConfig(
    gridBackgroundColor: themeGridStyles[color]?["gridBackgroundColor"]!,
    rowColor: themeGridStyles[color]?["rowColor"]!,
    oddRowColor: themeGridStyles[color]?["oddRowColor"]!,
    evenRowColor: themeGridStyles[color]?["evenRowColor"]!,
    activatedColor: themeGridStyles[color]?["activatedColor"]!,
    rowCheckedColor: themeGridStyles[color]?["rowCheckedColor"]!,
    rowHoveredColor: themeGridStyles[color]?["rowHoveredColor"]!,
    cellColorInEditState: themeGridStyles[color]?["cellColorInEditState"]!,
    cellColorInReadOnlyState: themeGridStyles[color]
        ?["cellColorInReadOnlyState"]!,
    dragTargetColumnColor: themeGridStyles[color]?["dragTargetColumnColor"]!,
    iconColor: themeGridStyles[color]?["iconColor"]!,
    disabledIconColor: themeGridStyles[color]?["disabledIconColor"]!,
    menuBackgroundColor: themeGridStyles[color]?["menuBackgroundColor"]!,
    gridBorderColor: themeGridStyles[color]?["gridBorderColor"]!,
    borderColor: themeGridStyles[color]?["borderColor"]!,
    activatedBorderColor: themeGridStyles[color]?["activatedBorderColor"]!,
    inactivatedBorderColor: themeGridStyles[color]?["inactivatedBorderColor"]!,
    columnTextStyle: themeGridStyles[color]?["columnTextStyle"]!,
    cellTextStyle: themeGridStyles[color]?["cellTextStyle"]!,
  );
}
