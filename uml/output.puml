@startuml
set namespaceSeparator ::

class "spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::StackGridCase" {
  +StackGridItem item
  +State<StackGridCase> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::StackGridCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_grid_item.dart::StackGridItem"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::StackGridCase"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::_StackGridCaseState" {
  +List<TrinaColumn> columns
  +List<TrinaRow> rows
  +TrinaGridStateManager? stateManager
  +bool isLoaded
  +FocusNode focusNode
  +HomeRepo homeRepo
  +String? apiId
  -StackBoardController _controller()
  +void initState()
  +void dispose()
  +Widget build()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::_StackGridCaseState" o-- "pluto_grid_plus::src::manager::pluto_grid_state_manager.dart::TrinaGridStateManager"
"spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::_StackGridCaseState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::_StackGridCaseState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_grid_case.dart::_StackGridCaseState"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::StackSearchCase" {
  +StackSearchItem item
  +State<StackSearchCase> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::StackSearchCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_search_item.dart::StackSearchItem"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::StackSearchCase"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_StackSearchCaseState" {
  +bool isLoaded
  +FocusNode focusNode
  +HomeRepo homeRepo
  +GlobalKey<FormBuilderState> formKey
  +String savedValue
  +List<String> reqApis
  +dynamic item
  +void initState()
  +void dispose()
  +Widget build()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_StackSearchCaseState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_StackSearchCaseState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_StackSearchCaseState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormBuilderState>"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_StackSearchCaseState"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::NewField" {
  +String name
  +String? initialValue
  +HomeRepo homeRepo
  +State<NewField> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::NewField" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::NewField"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_NewFieldState" {
  +TextEditingController controller
  +String name
  +HomeRepo homeRepo
  +void initState()
  +Widget build()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_NewFieldState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_NewFieldState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_search_case.dart::_NewFieldState"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::StackLayoutCase" {
  +StackLayoutItem item
  +State<StackLayoutCase> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::StackLayoutCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_split_item.dart::StackLayoutItem"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::StackLayoutCase"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::_StackLayoutCaseState" {
  +bool isLoaded
  +int dockBoardIndex
  +FocusNode focusNode
  +MultiSplitViewTheme themeSplit
  +HomeRepo homeRepo
  +void initState()
  +void dispose()
  +DockBoard newDockBoard()
  +void initSplit()
  +Widget build()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::_StackLayoutCaseState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::_StackLayoutCaseState" o-- "multi_split_view::src::theme_widget.dart::MultiSplitViewTheme"
"spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::_StackLayoutCaseState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_split_case.dart::_StackLayoutCaseState"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" {
  +StackTextItem item
  +InputDecoration? decoration
  +TextEditingController? controller
  +int? maxLength
  +TextInputAction? textInputAction
  +TextAlignVertical? textAlignVertical
  +TextInputType? keyboardType
  +dynamic Function(String)? onChanged
  +dynamic Function()? onEditingComplete
  +dynamic Function()? onTap
  +bool readOnly
  +bool autofocus
  +bool obscureText
  +int? maxLines
  +List<TextInputFormatter>? inputFormatters
  +FocusNode? focusNode
  +bool enabled
  +TextCapitalization textCapitalization
  +TextItemContent? content
  +State<StackTextCase> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::StackTextItem"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::material::input_decorator.dart::InputDecoration"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::services::text_input.dart::TextInputAction"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::painting::alignment.dart::TextAlignVertical"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::services::text_input.dart::TextInputType"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "null::dynamic Function(String)"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "null::dynamic Function()"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "flutter::src::services::text_input.dart::TextCapitalization"
"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::StackTextCase"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::_StackTextCaseState" {
  +FocusNode focusNode
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildNormal()
  -Widget _buildEditing()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::_StackTextCaseState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_text_case.dart::_StackTextCaseState"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::StackImageCase" {
  +StackImageItem item
  +State<StackImageCase> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::StackImageCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::StackImageItem"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::StackImageCase"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::_StackImageCaseState" {
  +FocusNode focusNode
  +ImageItemContent content
  +void initState()
  +void dispose()
  +Widget build()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::_StackImageCaseState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::_StackImageCaseState" o-- "spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_image_case.dart::_StackImageCaseState"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::StackFrameCase" {
  +StackFrameItem item
  +State<StackFrameCase> createState()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::StackFrameCase" o-- "spike_v2::src::board::src::stack_board_items::items::stack_dock_item.dart::StackFrameItem"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::StackFrameCase"

class "spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" {
  +bool isLoaded
  +FocusNode focusNode
  +DockingLayout layout
  +Docking docking
  +int dockingItemIndex
  +MultiSplitViewTheme themeSplitTab
  +TabbedViewTheme themeActiveTab
  +HomeRepo homeRepo
  -String _lastStringify
  +void saveLayout()
  +void loadLayout()
  +String idToString()
  +dynamic stringToId()
  +void initState()
  +void dispose()
  +List<TabButton> listTabButton()
  +DockingItem newDockingItem()
  +dynamic initDock()
  +Widget build()
  +DockingItem buildDockingItem()
}

"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" o-- "docking::src::layout::docking_layout.dart::DockingLayout"
"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" o-- "docking::src::docking.dart::Docking"
"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" o-- "multi_split_view::src::theme_widget.dart::MultiSplitViewTheme"
"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" o-- "tabbed_view::src::theme::theme_widget.dart::TabbedViewTheme"
"spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState"
"docking::src::layout::layout_parser.dart::LayoutParserMixin" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState"
"docking::src::layout::area_builder.dart::AreaBuilderMixin" <|-- "spike_v2::src::board::src::stack_board_items::item_case::stack_dock_case.dart::_StackFrameCaseState"

class "spike_v2::src::board::src::stack_board_items::items::stack_dock_item.dart::FrameItemContent" {
  +String? lastStringify
  +double? size
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_dock_item.dart::FrameItemContent"

class "spike_v2::src::board::src::stack_board_items::items::stack_dock_item.dart::StackFrameItem" {
  +StackFrameItem copyWith()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_dock_item.dart::StackFrameItem"

class "spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" {
  -ImageProvider<Object> _image
  +String? url
  +String? assetName
  +String? semanticLabel
  +bool excludeFromSemantics
  +double? width
  +double? height
  +Color? color
  +BlendMode? colorBlendMode
  +BoxFit fit
  +ImageRepeat repeat
  +bool matchTextDirection
  +bool gaplessPlayback
  +bool isAntiAlias
  +FilterQuality filterQuality
  +ImageProvider<Object> image
  -void _init()
  +void setRes()
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" o-- "flutter::src::painting::image_provider.dart::ImageProvider<Object>"
"spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" o-- "dart::ui::Color"
"spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" o-- "dart::ui::BlendMode"
"spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" o-- "flutter::src::painting::box_fit.dart::BoxFit"
"spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" o-- "flutter::src::painting::decoration_image.dart::ImageRepeat"
"spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent" o-- "dart::ui::FilterQuality"
"spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::ImageItemContent"

class "spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::StackImageItem" {
  +void setUrl()
  +void setAssetName()
  +StackImageItem copyWith()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_image_item.dart::StackImageItem"

class "spike_v2::src::board::src::stack_board_items::items::stack_split_item.dart::LayoutItemContent" {
  +Axis? axis
  +int? cell
  -void _init()
  +void setRes()
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::stack_board_items::items::stack_split_item.dart::LayoutItemContent" o-- "flutter::src::painting::basic_types.dart::Axis"
"spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_split_item.dart::LayoutItemContent"

class "spike_v2::src::board::src::stack_board_items::items::stack_split_item.dart::StackLayoutItem" {
  +void setAxis()
  +void setCell()
  +StackLayoutItem copyWith()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_split_item.dart::StackLayoutItem"

class "spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" {
  +String? data
  +TextStyle? style
  +StackTextStrutStyle? strutStyle
  +TextAlign? textAlign
  +TextDirection? textDirection
  +Locale? locale
  +bool? softWrap
  +TextOverflow? overflow
  +double? textScaleFactor
  +int? maxLines
  +String? semanticsLabel
  +TextWidthBasis? textWidthBasis
  +TextHeightBehavior? textHeightBehavior
  +Color? selectionColor
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "flutter::src::painting::text_style.dart::TextStyle"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "spike_v2::src::board::src::widget_style_extension::stack_text_strut_style.dart::StackTextStrutStyle"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "dart::ui::TextAlign"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "dart::ui::TextDirection"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "dart::ui::Locale"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "flutter::src::painting::text_painter.dart::TextOverflow"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "flutter::src::painting::text_painter.dart::TextWidthBasis"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "dart::ui::TextHeightBehavior"
"spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent" o-- "dart::ui::Color"
"spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::TextItemContent"

class "spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::StackTextItem" {
  +void setData()
  +StackTextItem copyWith()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_text_item.dart::StackTextItem"

class "spike_v2::src::board::src::stack_board_items::items::stack_search_item.dart::SearchItemContent" {
  +Map<String, List<String>>? reqApis
  +double? size
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_search_item.dart::SearchItemContent"

class "spike_v2::src::board::src::stack_board_items::items::stack_search_item.dart::StackSearchItem" {
  +StackSearchItem copyWith()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_search_item.dart::StackSearchItem"

class "spike_v2::src::board::src::stack_board_items::items::stack_grid_item.dart::GridItemContent" {
  +String? apiId
  +List<TrinaColumn>? columns
  +List<TrinaRow>? rows
  +TrinaGridMode? mode
  +double? size
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::stack_board_items::items::stack_grid_item.dart::GridItemContent" o-- "pluto_grid_plus::src::pluto_grid_enums.dart::TrinaGridMode"
"spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_grid_item.dart::GridItemContent"

class "spike_v2::src::board::src::stack_board_items::items::stack_grid_item.dart::StackGridItem" {
  +StackGridItem copyWith()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" <|-- "spike_v2::src::board::src::stack_board_items::items::stack_grid_item.dart::StackGridItem"

class "spike_v2::src::board::src::widget_style_extension::stack_text_strut_style.dart::StackTextStrutStyle" {
  +String? fontFamily
  +List<String>? fontFamilyFallback
  +double? fontSize
  +double? height
  +TextLeadingDistribution? leadingDistribution
  +double? leading
  +FontWeight? fontWeight
  +FontStyle? fontStyle
  +bool? forceStrutHeight
  +StrutStyle style
  +Map<String, dynamic> toJson()
}

"spike_v2::src::board::src::widget_style_extension::stack_text_strut_style.dart::StackTextStrutStyle" o-- "dart::ui::TextLeadingDistribution"
"spike_v2::src::board::src::widget_style_extension::stack_text_strut_style.dart::StackTextStrutStyle" o-- "dart::ui::FontWeight"
"spike_v2::src::board::src::widget_style_extension::stack_text_strut_style.dart::StackTextStrutStyle" o-- "dart::ui::FontStyle"
"spike_v2::src::board::src::widget_style_extension::stack_text_strut_style.dart::StackTextStrutStyle" o-- "flutter::src::painting::strut_style.dart::StrutStyle"

class "spike_v2::src::board::src::core::stack_board_controller.dart::StackConfig" {
  +List<StackItem<StackItemContent>> data
  +Map<String, int> indexMap
  +StackItem<StackItemContent> []()
  +StackConfig copyWith()
  +String toString()
}

class "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController" {
  -String? _tag
  -Size? _boardSize
  -Map<String, int> _indexMap
  {static} -StackBoardController _defaultController
  +Map<String, dynamic> innerApi
  +Size? boardSize
  +List<StackItem<StackItemContent>> innerData
  -Map<String, int> _newIndexMap
  +int hashCode
  +StackItem<StackItemContent>? getById()
  +int getIndexById()
  -List<StackItem<StackItemContent>> _reorder()
  +void addItem()
  +void removeItem()
  +void removeById()
  +void selectOne()
  +void setBoardSize()
  +void setItemStatus()
  +void setAllItemStatuses()
  +void moveItemOnTop()
  +void unSelectAll()
  +void updateBasic()
  +void updateItem()
  +void clear()
  +Map<String, dynamic>? getSelectedData()
  +Map<String, dynamic>? getDataById()
  +List<Map<String, dynamic>> getTypeData()
  +List<Map<String, dynamic>> getAllData()
  +bool ==()
  +void dispose()
}

"spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController" o-- "dart::ui::Size"
"spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController" o-- "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController"
"spike_v2::src::board::src::helpers::safe_value_notifier.dart::SafeValueNotifier" <|-- "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController"

abstract class "spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" {
  +String boardId
  +String id
  +Size size
  +Offset offset
  +double angle
  +StackItemStatus status
  +bool lockZOrder
  +bool dock
  +T? content
  +int hashCode
  +StackItem<T> copyWith()
  +Map<String, dynamic> toJson()
  +String toString()
  +bool ==()
}

"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" o-- "dart::ui::Size"
"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" o-- "dart::ui::Offset"
"spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem" o-- "spike_v2::src::board::src::core::stack_board_item::stack_item_status.dart::StackItemStatus"

class "spike_v2::src::board::src::core::stack_board_item::stack_item_status.dart::StackItemStatus" {
  +int index
  {static} +List<StackItemStatus> values
  {static} +StackItemStatus editing
  {static} +StackItemStatus moving
  {static} +StackItemStatus scaling
  {static} +StackItemStatus resizing
  {static} +StackItemStatus roating
  {static} +StackItemStatus selected
  {static} +StackItemStatus idle
  {static} +StackItemStatus locked
}

"spike_v2::src::board::src::core::stack_board_item::stack_item_status.dart::StackItemStatus" o-- "spike_v2::src::board::src::core::stack_board_item::stack_item_status.dart::StackItemStatus"
"dart::core::Enum" <|-- "spike_v2::src::board::src::core::stack_board_item::stack_item_status.dart::StackItemStatus"

abstract class "spike_v2::src::board::src::core::stack_board_item::stack_item_content.dart::StackItemContent" {
  +Map<String, dynamic> toJson()
}

class "spike_v2::src::board::src::core::case_style.dart::CaseStyle" {
  +Color buttonBgColor
  +Color buttonBorderColor
  +double buttonBorderWidth
  +Color buttonIconColor
  +double buttonSize
  +Color frameBorderColor
  +double frameBorderWidth
  +double? boxAspectRatio
  +int hashCode
  +Map<String, dynamic> toJson()
  +bool ==()
}

"spike_v2::src::board::src::core::case_style.dart::CaseStyle" o-- "dart::ui::Color"

class "spike_v2::src::board::src::stack_board.dart::StackBoardConfig" {
  +StackBoardController controller
  +CaseStyle? caseStyle
  {static} +StackBoardConfig of()
  +bool updateShouldNotify()
}

"spike_v2::src::board::src::stack_board.dart::StackBoardConfig" o-- "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController"
"spike_v2::src::board::src::stack_board.dart::StackBoardConfig" o-- "spike_v2::src::board::src::core::case_style.dart::CaseStyle"
"flutter::src::widgets::framework.dart::InheritedWidget" <|-- "spike_v2::src::board::src::stack_board.dart::StackBoardConfig"

class "spike_v2::src::board::src::stack_board.dart::StackBoard" {
  +String? id
  +StackBoardController? controller
  +Widget? background
  +CaseStyle? caseStyle
  +Widget? Function(StackItem<StackItemContent>)? customBuilder
  +void Function(StackItem<StackItemContent>)? onDock
  +void Function(StackItem<StackItemContent>)? onDel
  +void Function(StackItem<StackItemContent>)? onTap
  +bool? Function(StackItem<StackItemContent>, Size)? onSizeChanged
  +bool? Function(StackItem<StackItemContent>, Offset)? onOffsetChanged
  +bool? Function(StackItem<StackItemContent>, double)? onAngleChanged
  +bool? Function(StackItem<StackItemContent>, StackItemStatus)? onStatusChanged
  +Widget Function(StackItemStatus, CaseStyle)? actionsBuilder
  +Widget Function(StackItemStatus)? borderBuilder
  +State<StackBoard> createState()
}

"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "flutter::src::widgets::framework.dart::Widget"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "spike_v2::src::board::src::core::case_style.dart::CaseStyle"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::Widget Function(StackItem<StackItemContent>)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::void Function(StackItem<StackItemContent>)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::bool Function(StackItem<StackItemContent>, Size)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::bool Function(StackItem<StackItemContent>, Offset)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::bool Function(StackItem<StackItemContent>, double)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::bool Function(StackItem<StackItemContent>, StackItemStatus)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::Widget Function(StackItemStatus, CaseStyle)"
"spike_v2::src::board::src::stack_board.dart::StackBoard" o-- "null::Widget Function(StackItemStatus)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_board.dart::StackBoard"

class "spike_v2::src::board::src::stack_board.dart::_StackBoardState" {
  +double startX
  +double startY
  +double endX
  +double endY
  -StackBoardController _controller
  +void initState()
  +Widget build()
  -void _onPanStart()
  -void _onPanUpdate()
  -void _onPanEnd()
  -Widget _itemBuilder()
}

"spike_v2::src::board::src::stack_board.dart::_StackBoardState" o-- "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_board.dart::_StackBoardState"

class "spike_v2::src::board::src::dock_board.dart::DockBoard" {
  +String id
  +State<DockBoard> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::dock_board.dart::DockBoard"

class "spike_v2::src::board::src::dock_board.dart::_DockBoardState" {
  +HomeRepo homeRepo
  +StackBoardController stackBoardController
  +bool isSelectedDockBoard
  +void initState()
  +void dispose()
  -dynamic _onDock()
  -dynamic _onDel()
  -dynamic _delDialog()
  +dynamic call()
  +void addTextItem()
  +void addSearchItem()
  +void addImageItem()
  +void addGridItem()
  +void addSplitItem()
  +void addDockItem()
  +dynamic generateFromJson()
  +dynamic deleteAll()
  +dynamic getJson()
  -void _showAlertDialog()
  +Widget build()
}

"spike_v2::src::board::src::dock_board.dart::_DockBoardState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"spike_v2::src::board::src::dock_board.dart::_DockBoardState" o-- "spike_v2::src::board::src::core::stack_board_controller.dart::StackBoardController"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::dock_board.dart::_DockBoardState"

abstract class "spike_v2::src::board::src::helpers::safe_state.dart::SafeState" {
  +FutureOr<void> safeSetState()
  +void initState()
  +void setState()
  +dynamic contextReady()
}

class "spike_v2::src::board::src::helpers::ex_enum.dart::ExEnum" {
  {static} -bool _isEnum()
  {static} +T? tryParse()
}

class "spike_v2::src::board::src::helpers::safe_value_notifier.dart::SafeValueNotifier" {
  -bool _mounted
  +T value
  +void dispose()
}

"flutter::src::foundation::change_notifier.dart::ValueNotifier" <|-- "spike_v2::src::board::src::helpers::safe_value_notifier.dart::SafeValueNotifier"

class "spike_v2::src::board::src::stack_item_case::config_builder.dart::ConfigBuilder" {
  +bool Function(StackConfig, StackConfig)? shouldRebuild
  +Widget Function(StackConfig, Widget)? childBuilder
  +Widget child
  +Widget build()
  {static} +Widget withItem()
}

"spike_v2::src::board::src::stack_item_case::config_builder.dart::ConfigBuilder" o-- "null::bool Function(StackConfig, StackConfig)"
"spike_v2::src::board::src::stack_item_case::config_builder.dart::ConfigBuilder" o-- "null::Widget Function(StackConfig, Widget)"
"spike_v2::src::board::src::stack_item_case::config_builder.dart::ConfigBuilder" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "spike_v2::src::board::src::stack_item_case::config_builder.dart::ConfigBuilder"

class "spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" {
  +StackItem<StackItemContent> stackItem
  +Widget? Function(StackItem<StackItemContent>)? childBuilder
  +CaseStyle? caseStyle
  +void Function()? onDock
  +void Function()? onDel
  +void Function()? onTap
  +bool? Function(Size)? onSizeChanged
  +bool? Function(Offset)? onOffsetChanged
  +bool? Function(double)? onAngleChanged
  +bool? Function(StackItemStatus)? onStatusChanged
  +Widget Function(StackItemStatus, CaseStyle)? actionsBuilder
  +Widget Function(StackItemStatus)? borderBuilder
  +State<StatefulWidget> createState()
}

"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "spike_v2::src::board::src::core::stack_board_item::stack_item.dart::StackItem<StackItemContent>"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::Widget Function(StackItem<StackItemContent>)"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "spike_v2::src::board::src::core::case_style.dart::CaseStyle"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::void Function()"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::bool Function(Size)"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::bool Function(Offset)"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::bool Function(double)"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::bool Function(StackItemStatus)"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::Widget Function(StackItemStatus, CaseStyle)"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase" o-- "null::Widget Function(StackItemStatus)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::stack_item_case::stack_item_case.dart::StackItemCase"

class "spike_v2::src::board::src::stack_item_case::stack_item_case.dart::_StackItemCaseState" {
  +Offset centerPoint
  +Offset startGlobalPoint
  +Offset startOffset
  +Size startSize
  +double startAngle
  +Alignment? startAlignment
  +double endDx
  +double endDy
  +Offset dragOffset
  +int itemIndex
  +HomeRepo homeRepo
  +String itemId
  -StackBoardController _controller()
  -CaseStyle _caseStyle()
  -double _minSize()
  +void initState()
  -MouseCursor _cursor()
  -void _onTap()
  -void _onEdit()
  -void _onPanStart()
  -void _onPanEnd()
  -void _onPanUpdate()
  -void _onMoveKeyUpdate()
  -void _onScaleUpdate()
  -void _onResizeXYUpdate()
  -void _onRotateUpdate()
  +Widget build()
  -Widget _childrenStack()
  -Widget _content()
  -Widget _frameBorder()
  -Widget _deleteHandle()
  -Widget _mergeTileHandle()
  -Widget _scaleHandle()
  -Widget _resizeHandle()
  -Widget _rotateAndMoveHandle()
  -Widget _toolCase()
}

"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::_StackItemCaseState" o-- "dart::ui::Offset"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::_StackItemCaseState" o-- "dart::ui::Size"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::_StackItemCaseState" o-- "flutter::src::painting::alignment.dart::Alignment"
"spike_v2::src::board::src::stack_item_case::stack_item_case.dart::_StackItemCaseState" o-- "spike_v2::src::repo::home_repo.dart::HomeRepo"
"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::stack_item_case::stack_item_case.dart::_StackItemCaseState"

class "spike_v2::src::board::src::widgets::get_size.dart::_MeasureSizeRenderObject" {
  +Size? oldSize
  +void Function(Size) onChange
  +void performLayout()
}

"spike_v2::src::board::src::widgets::get_size.dart::_MeasureSizeRenderObject" o-- "dart::ui::Size"
"spike_v2::src::board::src::widgets::get_size.dart::_MeasureSizeRenderObject" o-- "spike_v2::src::board::src::widgets::get_size.dart::void Function(Size)"
"flutter::src::rendering::proxy_box.dart::RenderProxyBox" <|-- "spike_v2::src::board::src::widgets::get_size.dart::_MeasureSizeRenderObject"

class "spike_v2::src::board::src::widgets::get_size.dart::GetSize" {
  +void Function(Size) onChanged
  +RenderObject createRenderObject()
}

"spike_v2::src::board::src::widgets::get_size.dart::GetSize" o-- "spike_v2::src::board::src::widgets::get_size.dart::void Function(Size)"
"flutter::src::widgets::framework.dart::SingleChildRenderObjectWidget" <|-- "spike_v2::src::board::src::widgets::get_size.dart::GetSize"

class "spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder" {
  +ValueListenable<T> valueListenable
  +Widget? child
  +Widget Function(T)? builder
  +Widget Function(T, Widget)? childBuilder
  +bool Function(T, T)? shouldRebuild
  +State<StatefulWidget> createState()
}

"spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder" o-- "flutter::src::foundation::change_notifier.dart::ValueListenable<T>"
"spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder" o-- "flutter::src::widgets::framework.dart::Widget"
"spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder" o-- "null::Widget Function(T)"
"spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder" o-- "null::Widget Function(T, Widget)"
"spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder" o-- "null::bool Function(T, T)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "spike_v2::src::board::src::widgets::ex_builder.dart::ExBuilder"

class "spike_v2::src::board::src::widgets::ex_builder.dart::_ExBuilderState" {
  -T _value
  +void initState()
  +void didUpdateWidget()
  +void dispose()
  -void _valueChanged()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "spike_v2::src::board::src::widgets::ex_builder.dart::_ExBuilderState"
"spike_v2::src::board::src::helpers::safe_state.dart::SafeState" <|-- "spike_v2::src::board::src::widgets::ex_builder.dart::_ExBuilderState"


@enduml